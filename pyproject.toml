[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=61.2",
    "setuptools_scm",
]

[project]
authors = [{name = "Common Partial Wave Analysis", email = "compwa-admin@ep1.rub.de"}]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python",
    "Topic :: Documentation",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = ["pybtex"]
description = "Abbreviate long author lists with et al. in BibTeX bibliographies for Sphinx"
dynamic = ["version"]
keywords = [
    "bibliography",
    "bibtex",
    "sphinx",
]
license = {text = "BSD 3-Clause License"}
maintainers = [{email = "compwa-admin@ep1.rub.de"}]
name = "sphinx-pybtex-etal-style"
requires-python = ">=3.9"

[project.readme]
content-type = "text/markdown"
file = "README.md"

[project.urls]
Changelog = "https://github.com/ComPWA/sphinx-pybtex-etal-style/releases"
Documentation = "https://github.com/ComPWA/sphinx-pybtex-etal-style/blob/main/README.md"
Source = "https://github.com/ComPWA/sphinx-pybtex-etal-style"
Tracker = "https://github.com/ComPWA/sphinx-pybtex-etal-style/issues"

[dependency-groups]
dev = [
    "ruff",
    {include-group = "style"},
]
style = [
    "mypy",
    {include-group = "types"},
]
types = ["sphinx"]

[tool.setuptools]
include-package-data = true
license-files = ["LICENSE"]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.setuptools.packages.find]
namespaces = false
where = ["src"]

[tool.setuptools_scm]
local_scheme = "no-local-version"
version_scheme = "only-version"
write_to = "src/version.py"

[tool.coverage.run]
branch = true
source = ["src"]

[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_defs = true
files = [
    "**/*.py",
    "**/*.pyi",
]
show_error_codes = true
warn_unused_configs = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["pybtex.*"]

[tool.pyright]
exclude = [
    "**/.git",
    "**/.ipynb_checkpoints",
    "**/.mypy_cache",
    "**/.pytest_cache",
    "**/.tox",
    "**/.venv/",
    "**/__pycache__",
    "**/_build",
]
reportGeneralTypeIssues = false
reportMissingImports = false
reportMissingParameterType = false
reportMissingTypeArgument = false
reportUnboundVariable = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUntypedFunctionDecorator = false
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedImport = true
reportUnusedVariable = true
typeCheckingMode = "strict"
venv = ".venv"
venvPath = "."

[tool.ruff]
extend-include = ["*.ipynb"]
preview = true
show-fixes = true
src = ["src"]

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
ignore = [
    "ANN",
    "COM812",
    "CPY001",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D107",
    "D203",
    "D213",
    "D407",
    "D416",
    "DOC",
    "E501",
    "FBT",
    "FURB101",
    "FURB103",
    "FURB140",
    "G004",
    "ISC001",
    "PLW1514",
    "PT001",
    "PTH",
    "SIM108",
    "UP036",
]
select = ["ALL"]
task-tags = ["cspell"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["display"]

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = [
    "B018",
    "C90",
    "D",
    "E303",
    "E703",
    "N806",
    "N816",
    "PLR09",
    "PLR2004",
    "PLW0602",
    "PLW0603",
    "S101",
    "T20",
    "TCH00",
]
"setup.py" = ["D100"]
"tests/*" = [
    "D",
    "INP001",
    "PGH001",
    "PLR0913",
    "PLR2004",
    "S101",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.tomlsort]
all = false
ignore_case = true
in_place = true
sort_first = [
    "build-system",
    "project",
    "tool.setuptools",
    "tool.setuptools_scm",
]
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
